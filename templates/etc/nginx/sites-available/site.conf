# {{ ansible_managed }}

{% if nginx_ssl_enforced %}
server {
  listen 80;
  return 301 https://$host$request_uri;
}

{% endif %}
{% if nginx_ssl_disabled %}
server {
  listen 443;
  return 301 http://$host$request_uri;
}

{% endif %}
server {
{% if nginx_developer_environments_enabled %}
  server_name ~{{ nginx_developer_environment_regexp }};
  if ( !-d {{ nginx_developer_environment_docroot }} ) { return 404 'Unable to Locate Matching Environment'; }
  root {{ nginx_developer_environment_docroot }};
{% else %}
  server_name localhost;
  root {{ nginx_docroot }};
  index index.html {% if nginx_php_enabled %}index.php{% endif %};
{% endif %}

{% if nginx_ssl_enabled %}
  listen 443;
  ssl on;
  ssl_certificate {{ nginx_ssl_certificate_path }};
  ssl_certificate_key {{ nginx_ssl_key_path }};

  ssl_prefer_server_ciphers on;
{% if nginx_ssl_should_degrade_security_to_accomodate_old_browsers %}
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA !RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";
{% else %}
  ssl_protocols TLSv1.2;
  ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 !RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";
{% endif %}
{% endif %}

{% if nginx_auth_enabled %}
  auth_basic "Private";
  auth_basic_user_file /data/www/auth;
{% endif %}

  client_max_body_size {{ nginx_client_max_body_size }};

  location ~* {{ nginx_file_extension_blacklist }} {
    return 403;
  }

{% if nginx_static_asset_handling_enabled %}
  location ~* \.(?:ico|css|js|gif|jpe?g|png|svgz?|webp|eot|ttf|woff|otf|pdf)$ {
{% if nginx_access_log_ignore_static_assets %}
    access_log off;
{% endif %}
    expires max;
    add_header Pragma public;
    add_header Cache-Control public;

{% if nginx_cors_enabled %}
{% if nginx_cors_whitelist_enabled %}
    if ($http_origin ~* ({{ nginx_cors_whitelist_protocol }}://{{ nginx_cors_whitelist_hosts }}(:[0-9]+)?)) {
        set $cors_allowed 'true';
    }
{% else %}
    set $cors_allowed 'true';
{% endif %}
    if ($cors_allowed) {
      set $cors_request $request_method;
    }

    if ($cors_request ~* ^(GET|POST)$) {
{% if nginx_cors_whitelist_enabled %}
      add_header Access-Control-Allow-Origin "$http_origin";
{% else %}
      add_header Access-Control-Allow-Origin *;
{% endif %}
      add_header Access-Control-Allow-Credentials 'true';
    }

    if ($cors_request = 'OPTIONS') {
{% if nginx_cors_whitelist_enabled %}
      add_header Access-Control-Allow-Origin "$http_origin";
{% else %}
      add_header Access-Control-Allow-Origin *;
{% endif %}
      add_header Access-Control-Allow-Credentials 'true';
      add_header Access-Control-Max-Age 1728000;
      add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
      add_header Access-Control-Allow-Headers 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since';
      add_header Content-Length 0;
      add_header Content-Type 'text/plain charset=UTF-8';

      return 204;
    }
  }
{% endif %}
{% endif %}

{% if nginx_context_proxy_enabled %}
{% for path in nginx_context_proxy_paths %}

  location {{ path }} {
    proxy_pass {{ nginx_context_proxy_host }}{{path}};
    proxy_cookie_domain {{ nginx_context_proxy_domain_equivalence }};
    proxy_set_header X-Forwarded-For $remote_addr;
  }
{% endfor %}
{% endif %}

{% if nginx_php_enabled %}
{% if nginx_php_path_blacklist_enabled %}
  location ~ {{ nginx_php_path_blacklist_regexp }} {
    try_files {{ nginx_php_path_blacklist_try_files }} =404;
  }
{% endif %}

  # Defect #321 (http://trac.nginx.org/nginx/ticket/321) may require accomodation in code.
{% if nginx_php_index_only %}
  location / {
    try_files /index.php =404;
{% else %}
  location / {
    try_files $uri $uri/ /index.php;
  }

  location ~ \.php$ {
{% endif %}
{% if nginx_php_virtual_context_enabled %}
    location ~ {{ nginx_php_virtual_context_path }} {
      rewrite ^{{ nginx_php_virtual_context_path }}/?(?<context>.*) /$context;
    }
{% endif %}
    fastcgi_pass unix:{{ runtime_root }}/php/fpm.sock;
    fastcgi_index index.php;
    fastcgi_buffers 8 {{ nginx_fastcgi_buffers }};
    include /etc/nginx/fastcgi_params;
{% if nginx_php_fastcgi_param_extras_enabled %}
{% for parameter in nginx_php_fastcgi_param_extras %}
    fastcgi_param {{ parameter }};
{% endfor %}
{% endif %}
  }
{% else %}
  location / {
    try_files $uri $uri/ /index.html;
  }
{% endif %}
}
